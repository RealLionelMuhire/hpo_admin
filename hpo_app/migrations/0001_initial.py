# Generated by Django 5.2.5 on 2025-08-14 22:05

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('level', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('registration_number', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Organisation',
                'verbose_name_plural': 'Organisations',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128, validators=[django.core.validators.MinLengthValidator(6)])),
                ('role', models.CharField(choices=[('Super Admin', 'Super Admin'), ('Organization Admin', 'Organization Admin'), ('HPO Admin', 'HPO Admin'), ('superadmin', 'superadmin'), ('orgadmin', 'orgadmin'), ('hpoadmin', 'hpoadmin')], default='Organization Admin', max_length=50)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('access_level', models.CharField(choices=[('full', 'Full'), ('limited', 'Limited'), ('read-only', 'Read Only')], default='limited', max_length=20)),
                ('supervisor', models.CharField(blank=True, max_length=255, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admins', to='hpo_app.organisation')),
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('password', models.CharField(max_length=128, validators=[django.core.validators.MinLengthValidator(6)])),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20, null=True)),
                ('subscription_type', models.CharField(choices=[('free', 'Free'), ('premium', 'Premium'), ('enterprise', 'Enterprise')], default='free', max_length=20)),
                ('address', models.TextField(blank=True, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('parent_guardian', models.CharField(blank=True, max_length=255, null=True)),
                ('parent_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('education_level', models.CharField(blank=True, choices=[('elementary', 'Elementary'), ('middle_school', 'Middle School'), ('high_school', 'High School'), ('undergraduate', 'Undergraduate'), ('graduate', 'Graduate'), ('other', 'Other')], max_length=20, null=True)),
                ('interests', models.JSONField(blank=True, default=list)),
                ('notes', models.TextField(blank=True, null=True)),
                ('password_reset_token', models.CharField(blank=True, max_length=255, null=True)),
                ('password_reset_expires', models.DateTimeField(blank=True, null=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('points', models.IntegerField(default=0)),
                ('total_attempts', models.IntegerField(default=0)),
                ('subscription_status', models.CharField(choices=[('free', 'Free'), ('paid', 'Paid'), ('org_paid', 'Organization Paid')], default='free', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='hpo_app.group')),
                ('groups', models.ManyToManyField(blank=True, related_name='group_members', to='hpo_app.group')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organisation_players', to='hpo_app.organisation')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='players', to='hpo_app.organisation')),
            ],
            options={
                'verbose_name': 'Player',
                'verbose_name_plural': 'Players',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to='hpo_app.player'),
        ),
    ]
